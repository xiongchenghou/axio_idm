<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.axio.masterMentsetSystem.repository.MPasswordMapper">
  <resultMap id="BaseResultMap" type="jp.co.axio.masterMentsetSystem.model.MPassword">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="curr_password" jdbcType="VARCHAR" property="currPassword" />
    <result column="init_password" jdbcType="VARCHAR" property="initPassword" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="lock_passwod" jdbcType="VARCHAR" property="lockPasswod" />
    <result column="register_id" jdbcType="VARCHAR" property="registerId" />
    <result column="regist_ts" jdbcType="TIMESTAMP" property="registTs" />
    <result column="updater_id" jdbcType="VARCHAR" property="updaterId" />
    <result column="update_ts" jdbcType="TIMESTAMP" property="updateTs" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, curr_password, init_password, user_password, lock_passwod, register_id, 
    regist_ts, updater_id, update_ts
  </sql>
  <select id="selectByExample" parameterType="jp.co.axio.masterMentsetSystem.model.MPasswordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.m_password
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.m_password
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="decryptPassword" resultType="string">
    SELECT public.f_decrypt(#{encryptedPassword}, #{key}) AS decryptedPassword
    FROM public.m_password
    WHERE user_id = #{userId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from public.m_password
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.axio.masterMentsetSystem.model.MPasswordExample">
    delete from public.m_password
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.axio.masterMentsetSystem.model.MPassword">
    insert into public.m_password (user_id, curr_password, init_password, 
      user_password, lock_passwod, register_id, 
      regist_ts, updater_id, update_ts
      )
    values (#{userId,jdbcType=VARCHAR}, #{currPassword,jdbcType=VARCHAR}, #{initPassword,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{lockPasswod,jdbcType=VARCHAR}, #{registerId,jdbcType=VARCHAR}, 
      #{registTs,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=VARCHAR}, #{updateTs,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="jp.co.axio.masterMentsetSystem.model.MPassword">
    insert into public.m_password
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="currPassword != null">
        curr_password,
      </if>
      <if test="initPassword != null">
        init_password,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="lockPasswod != null">
        lock_passwod,
      </if>
      <if test="registerId != null">
        register_id,
      </if>
      <if test="registTs != null">
        regist_ts,
      </if>
      <if test="updaterId != null">
        updater_id,
      </if>
      <if test="updateTs != null">
        update_ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="currPassword != null">
        #{currPassword,jdbcType=VARCHAR},
      </if>
      <if test="initPassword != null">
        #{initPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="lockPasswod != null">
        #{lockPasswod,jdbcType=VARCHAR},
      </if>
      <if test="registerId != null">
        #{registerId,jdbcType=VARCHAR},
      </if>
      <if test="registTs != null">
        #{registTs,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTs != null">
        #{updateTs,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.axio.masterMentsetSystem.model.MPasswordExample" resultType="java.lang.Long">
    select count(*) from public.m_password
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public.m_password
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.currPassword != null">
        curr_password = #{record.currPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.initPassword != null">
        init_password = #{record.initPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.lockPasswod != null">
        lock_passwod = #{record.lockPasswod,jdbcType=VARCHAR},
      </if>
      <if test="record.registerId != null">
        register_id = #{record.registerId,jdbcType=VARCHAR},
      </if>
      <if test="record.registTs != null">
        regist_ts = #{record.registTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updaterId != null">
        updater_id = #{record.updaterId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTs != null">
        update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public.m_password
    set user_id = #{record.userId,jdbcType=VARCHAR},
      curr_password = #{record.currPassword,jdbcType=VARCHAR},
      init_password = #{record.initPassword,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      lock_passwod = #{record.lockPasswod,jdbcType=VARCHAR},
      register_id = #{record.registerId,jdbcType=VARCHAR},
      regist_ts = #{record.registTs,jdbcType=TIMESTAMP},
      updater_id = #{record.updaterId,jdbcType=VARCHAR},
      update_ts = #{record.updateTs,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.axio.masterMentsetSystem.model.MPassword">
    update public.m_password
    <set>
      <if test="currPassword != null">
        curr_password = #{currPassword,jdbcType=VARCHAR},
      </if>
      <if test="initPassword != null">
        init_password = #{initPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="lockPasswod != null">
        lock_passwod = #{lockPasswod,jdbcType=VARCHAR},
      </if>
      <if test="registerId != null">
        register_id = #{registerId,jdbcType=VARCHAR},
      </if>
      <if test="registTs != null">
        regist_ts = #{registTs,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        updater_id = #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTs != null">
        update_ts = #{updateTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.axio.masterMentsetSystem.model.MPassword">
    update public.m_password
    set curr_password = #{currPassword,jdbcType=VARCHAR},
      init_password = #{initPassword,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      lock_passwod = #{lockPasswod,jdbcType=VARCHAR},
      register_id = #{registerId,jdbcType=VARCHAR},
      regist_ts = #{registTs,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=VARCHAR},
      update_ts = #{updateTs,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>